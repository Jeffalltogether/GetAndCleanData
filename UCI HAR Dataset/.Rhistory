library(swirl)
swirl()
R.version.string
library(swirl)
install_from_swirl("Getting and Cleaning Data")
library(swirl)
swirl()
q
quit
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head()
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
library(swirl)
swirl()
quit
q()
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.5
SPECt <- 0.9
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
SENSt <- 0.9
SPECt <- 0.9
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Cost-effectiveness Analysis
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.9
SPECt <- 0.9
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
## Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 1.0
SPECt <- 1.0
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0
SPECt <- 0
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.9
SPECt <- 0.9
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.5
SPECt <- 0.5
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.7
SPECt <- 0.7
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.5
SPECt <- 0.5
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.8
SPECt <- 0.8
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
### Variables
pP <- 0.2       # % of population that is positive
pN <- 0.8       # % of population that is negative
CPc <- 4.1       # # of deaths per 100 people
CNc <- 0.0       # cost of performing the test
FPc <- 0.8       # # of unnecessary mortalities per 100 people
FNc <- 8.2       # # of deaths per 100 people
unitC <- 0.0    # Cost of test
SENSt <- 0.9
SPECt <- 0.9
Ecost <- unitC + (CPc*SENSt*pP) + FPc *( 1-SPECt) * pN + CNc * SPECt * pN + FNc * (1-SENSt) * pP
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res = gather(students2, key = sex_class, value = count)
res = gather(students2, key = "sex_class", value = "count")
res = gather(students2, sex_class, count, -grade)
res = gather(students2, sex_class, count, -grade)
res = gather(students2, sex_class, count, -grade)
res = gather(students2, sex_class, count, -grade)
students2
res = gather(students2, key = sex_class, value = count, -grade)
gather(students2, sex_class, count, -grade)
nxt()
rm(res)
q()
library(swirl)
swirl()
q()
library(swirl)
swirl()
library(dplyr)
q()
library(swirl)
swirl()
exit()
q()
library(swirl)
swirl()
library(tidyr)
students
setwd("C:/Users/jeffthatcher/Cloud Drive/RRepos/GetCleanData/UCI HAR Dataset")
